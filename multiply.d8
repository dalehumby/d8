; Assembled multiply.asm
0002 | multiply[2]			| 4
0004 | spchtemp[1]			| 5
0005 | start			| 7
0013 | multiply_sub			| 16
0023 | nextbit			| 28
003d | rotateab			| 45
0043 | done			| 49
; Symbol table = {'multiply': 2, 'spchtemp': 4, 'start': 5, 'multiply_sub': 19, 'nextbit': 35, 'rotateab': 61, 'done': 67}
0000 | 00111 000 0000 0101	| 3 | bra ['start']
0002 | multiply			| 4
0004 | spchtemp			| 5
0005 | 00001 000 0000 0010	| 8 | ldi ['a', '2']
0007 | 00100 000 0000 0010	| 9 | std ['a', 'multiply']
0009 | 00001 000 1111 1111	| 10 | ldi ['a', '0xff']
000B | 00100 000 0000 0011	| 11 | std ['a', 'multiply+1']
000D | 00001 101 0000 0010	| 12 | ldi ['x', 'multiply']
000F | 01100 000 0001 0011	| 13 | bsr ['multiply_sub']
0011 | 00000 000 0000 0000	| 14 | stop []
0013 | 00100 110 0000 0100	| 18 | std ['spch', 'spchtemp']
0015 | 00110 110 0101 0000	| 19 | mov ['spch', 'x']
0017 | 00001 000 0000 0000	| 21 | ldi ['a', '0']
0019 | 00011 001 0000 0000	| 22 | ldx ['b']
001B | 00101 000 0000 0000	| 23 | stx ['a']
001D | 10010 101 0101 0000	| 24 | inc ['x', 'x']
001F | 00011 010 0000 0000	| 25 | ldx ['c']
0021 | 00101 000 0000 0000	| 26 | stx ['a']
0023 | 00001 011 0000 0000	| 29 | ldi ['d', '0']
0025 | 10110 000 1010 0011	| 30 | cmp ['c', 'd']
0027 | 01010 000 0100 0011	| 31 | beq ['done']
0029 | 11001 010 0010 0000	| 33 | rorc ['c', 'c']
002B | 01001 000 0011 1101	| 34 | bcc ['rotateab']
002D | 00011 011 0000 0000	| 36 | ldx ['d']
002F | 10000 011 0001 0011	| 37 | add ['d', 'b', 'd']
0031 | 00101 011 0000 0000	| 38 | stx ['d']
0033 | 00110 101 0110 0000	| 39 | mov ['x', 'spch']
0035 | 00011 011 0000 0000	| 40 | ldx ['d']
0037 | 10001 011 0000 0011	| 41 | adc ['d', 'a', 'd']
0039 | 00101 011 0000 0000	| 42 | stx ['d']
003B | 10010 101 0101 0000	| 43 | inc ['x', 'x']
003D | 11000 001 0001 0000	| 46 | rolc ['b', 'b']
003F | 11000 000 0000 0000	| 47 | rolc ['a', 'a']
0041 | 00111 000 0010 0011	| 48 | bra ['nextbit']
0043 | 00010 110 0000 0100	| 50 | ldd ['spch', 'spchtemp']
0045 | 01101 000 0000 0000	| 51 | rts []
