; Assembled multiply.asm
0002 | start			| 5
000a | multiply_sub			| 11
000e | nextbit			| 16
0024 | done			| 31
; Symbol table = {'start': 2, 'multiply_sub': 10, 'nextbit': 14, 'done': 36}
0000 | 00111 000 0000 0010	| 3 | bra ['start']
0002 | 00001 000 0000 0101	| 6 | ldi ['a', '5']
0004 | 00001 001 0000 0011	| 7 | ldi ['b', '3']
0006 | 01100 000 0000 1010	| 8 | bsr ['multiply_sub']
0008 | 00000 000 0000 0000	| 9 | stop []
000a | 00001 010 0000 0000	| 13 | ldi ['c', '0']
000c | 00001 011 0000 0000	| 14 | ldi ['d', '0']
000e | 10110 000 1001 0010	| 17 | cmp ['b', 'c']
0010 | 01010 000 0010 0100	| 18 | beq ['done']
0012 | 11000 101 0001 0000	| 20 | rorc ['x', 'b']
0014 | 00110 001 0101 0000	| 21 | mov ['b', 'x']
0016 | 01001 000 0000 1110	| 22 | bcc ['nextbit']
0018 | 10000 101 0000 0011	| 24 | add ['x', 'a', 'd']
001a | 00110 011 0101 0000	| 25 | mov ['d', 'x']
001c | 10111 101 0000 0000	| 27 | rolc ['x', 'a']
001e | 01010 000 0010 0100	| 28 | beq ['done']
0020 | 00110 000 0101 0000	| 29 | mov ['a', 'x']
0022 | 00111 000 0000 1110	| 30 | bra ['nextbit']
0024 | 01101 000 0000 0000	| 32 | rts []
