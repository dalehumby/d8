; Assembled multiply.asm
0002 | start			| 5
000a | multiply_sub			| 11
0010 | nextbit			| 17
001e | rotatea			| 28
0024 | done			| 32
; Symbol table = {'start': 2, 'multiply_sub': 10, 'nextbit': 16, 'rotatea': 30, 'done': 36}
0000 | 00111 000 0000 0010	| 3 | bra ['start']
0002 | 00001 000 0001 0001	| 6 | ldi ['a', '17']
0004 | 00001 001 0000 1110	| 7 | ldi ['b', '14']
0006 | 01100 000 0000 1010	| 8 | bsr ['multiply_sub']
0008 | 00000 000 0000 0000	| 9 | stop []
000A | 00001 010 0000 0000	| 13 | ldi ['c', '0']
000C | 00001 011 0000 0000	| 14 | ldi ['d', '0']
000E | 00001 101 0000 0000	| 15 | ldi ['x', '0']
0010 | 10110 000 1001 0101	| 18 | cmp ['b', 'x']
0012 | 01010 000 0010 0100	| 19 | beq ['done']
0014 | 11001 001 0001 0000	| 21 | rorc ['b', 'b']
0016 | 01001 000 0001 1110	| 22 | bcc ['rotatea']
0018 | 10000 011 0000 0011	| 24 | add ['d', 'a', 'd']
001A | 01001 000 0001 1110	| 25 | bcc ['rotatea']
001C | 10010 010 0010 0000	| 26 | inc ['c', 'c']
001E | 11000 000 0000 0000	| 29 | rolc ['a', 'a']
0020 | 01010 000 0010 0100	| 30 | beq ['done']
0022 | 00111 000 0001 0000	| 31 | bra ['nextbit']
0024 | 01101 000 0000 0000	| 33 | rts []
