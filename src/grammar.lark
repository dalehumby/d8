program: line+

line: [directive | label | instruction] [comment] "\n"

directive: "."(reset | origin | define | data)
reset: "reset" location
origin: "origin" location
define: "define" SYMBOL (SYMBOL | literal)
data: "data" SYMBOL (SYMBOL | literal) [ESCAPED_STRING]

label: SYMBOL ":" [instruction]

instruction: "ADC" REG "," REG "," REG          -> adc
           | "ADD" REG "," REG "," REG          -> add
           | "AND" REG "," REG "," REG          -> and
           | "BCC" location                     -> bcc
           | "BCS" location                     -> bcs
           | "BEQ" location                     -> beq
           | "BNE" location                     -> bne
           | "BRA" location                     -> bra
           | "BSR" location                     -> bsr
           | "CLC"                              -> clc 
           | "CLR" REG                          -> clr
           | "CMP" REG "," REG                  -> cmp
           | "DEC" REG ["," REG]                -> dec
           | "INC" REG ["," REG]                -> inc
           | "LD" REG "," "#" literal           -> ldi
           | "LD" REG "," "&" location          -> ldi
           | "LD" REG "," location              -> ldd
           | "LD" REG "," "X" "," SIGNED_INT    -> ldx
           | "LD" REG "," "SP" "," SIGNED_INT   -> ldsp
           | "MOV" REG "," REG                  -> mov
           | "NOP"                              -> nop
           | "NOT" REG ["," REG]                -> not
           | "OR" REG "," REG "," REG           -> or
           | "PSH" REG                          -> psh
           | "PUL" REG                          -> pul
           | "ROLC" REG ["," REG]               -> rolc
           | "RORC" REG ["," REG]               -> rorc
           | "RTS"                              -> rts
           | "ST" REG "," location              -> std
           | "ST" REG "," "X" "," SIGNED_INT    -> stx
           | "ST" REG "," "SP" "," SIGNED_INT   -> stsp
           | "SEC"                              -> sec
           | "STOP"                             -> stop
           | "SBB" REG "," REG "," REG          -> sbb
           | "XOR" REG "," REG "," REG          -> xor

comment: COMMENT_STRING
COMMENT_STRING: /;.*/

location: (SYMBOL | literal) (SIGN (SYMBOL | literal))*
?literal: INT | HEX | "\"" CHAR "\""

SIGN: "+" | "-"
HEX: /0x[0-9a-fA-F]+/
CHAR: /[ -~]/

REG: "A" | "B" | "C" | "D" | "E" | "PAGE" | "X" | "SP"

%import common.INT
%import common.SIGNED_INT
%import common.HEXDIGIT
%import common.ESCAPED_STRING
%import common.CNAME -> SYMBOL
%import common.WS_INLINE
%ignore WS_INLINE
